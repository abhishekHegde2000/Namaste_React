Lecture - 2 - Part-02


- To initiate the build process for our app using Parcel, we run the following command:
  ```
  mpx parcel index.html
  ```

- After running this command, Parcel will start building our app.

- A `dist` folder will be created as part of the build process. This folder will contain the optimized and bundled version of our application.

- In the terminal, you will see that Parcel has created a local development server running at port 1234. This server is serving your app.

- Parcel takes care of hosting your app on the local server, making it accessible for testing and development.

These notes outline the process of using Parcel to build and serve your app, with a focus on the `mpx parcel` command and the `dist` folder where the optimized app is stored.



Great, I've included those points in the notes:

- **npx**: `npx` is a package runner tool that comes with npm. It's used for executing packages without the need to install them globally or locally. With `npx`, you can run packages directly.

- **Using npx with Parcel**: In the context of building and serving your app with Parcel, you use `npx` to execute Parcel without the need for a global or local installation.

- **Parcel Build and Host**: When you run `npx parcel index.html`, Parcel will build your app, and a local development server will be hosted at port 1234. This server serves your application.

- **Injecting React App**: You mentioned two ways to include a React app: through CDN links and using npm. Injecting via CDN links involves loading React from a content delivery network, while using npm allows you to manage React as a dependency within your project.

These notes provide a clear understanding of the roles of `npx` and Parcel in building and serving your app, as well as the options for injecting React into your project.

-----------------------------------------------


- To install React as a regular dependency (not a dev dependency), you can use the following command:
  ```
  npm install react
  ```
  This will add React to your `package.json`, `package-lock.json`, and `node_modules`.

- Similarly, you can install React DOM as a regular dependency using the `npm` or `npm i` shortcut:
  ```
  npm install react-dom
  ```
  or
  ```
  npm i react-dom
  ```

These notes clarify how to install React and React DOM as regular dependencies in your project using npm.

----------------------------------




- After installing React using npm, if you encounter an error stating "React is not defined" when trying to run your app, it's likely because you haven't imported React into your code.

- Even though you've installed React as a dependency, your code needs to explicitly import it to use it. its only in node_modules , need to import it to run the code.

- You can import React into your code like this:
  ```javascript
  import React from 'react';
  ```

This clarification in the notes explains the need to import React into your code after installing it as a dependency to resolve the "React is not defined" error.


-------------------------------------------

Certainly, I've included that point in the notes:

- If you encounter an issue where your browser displays an error like "scripts can't have import or export statements," it's because the browser treats the JavaScript file as a script rather than a module.

- To resolve this issue, you can inform the browser that your JavaScript file is a module by adding the `type="module"` attribute to the script tag in your HTML file. This allows you to use `import` and `export` statements.

Here's how you can specify your script as a module in your HTML file:

```html
<script type="module" src="app.js"></script>
```

This change helps ensure that your JavaScript code, which contains `import` statements, runs correctly in the browser.



- Parcel provides a development build of your project.
- It hosts your website on a local development server, making it accessible for testing and development.
- Parcel includes Hot Module Replacement (HMR), which automatically refreshes the server when you save changes to your code. This speeds up the development process by showing your updates in real-time without manual refreshes.
- parcel uses file watching algo - written in c++
- parcel is doing faster builds due to faste cashe
- parcel will also do image optimization
- bundle our code also , minify it also , compress them also 
- remove white space
- consistant hashing 
- differential bundles 
- error display of error , better error suggestions 
- host ur website on https 
- tree shaking - remove unsued code 


These notes highlight the benefits of using Parcel for development, including its local server hosting and HMR functionality.

